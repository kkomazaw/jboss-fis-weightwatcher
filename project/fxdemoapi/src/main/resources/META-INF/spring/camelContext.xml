<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="io.fabric8.mq.core.MQConnectionFactory" id="amqConnectionFactory">
        <property name="userName" value="admin"/>
        <property name="password" value="admin"/>
    </bean>
    <bean class="io.fabric8.mq.camel.AMQComponent" id="amq"/>

    <bean class="com.mycompany.fxtest.BeanCreator" id="beanCreator2"/>
    <cxf:rsClient
        address="http://fxdemorules:8080/kie-server/services/rest/server/containers/instances/containerfxdemo10"
        id="rsClient" loggingFeatureEnabled="true"
        password="kieserver1!"
        serviceClass="org.blogdemo.endpoint.CustEval" username="kieserver">
        <cxf:providers>
            <bean class="org.apache.cxf.jaxrs.provider.JAXBElementProvider"/>
        </cxf:providers>
        <cxf:headers>
            <cxf:entry key="Http-Method" value="POST"/>
            <cxf:entry key="Charset" value="UTF-8"/>
            <cxf:entry key="Content-Type" value="application/xml; charset=UTF-8"/>
            <cxf:entry key="X-KIE-ContentType" value="xstream"/>
        </cxf:headers>
    </cxf:rsClient>
    <camelContext id="camelContext-b337f7d1-0879-431e-b744-1f30bbcccb63"
        trace="false" xmlns="http://camel.apache.org/schema/spring">
        <dataFormats>
            <json id="myJson" library="Jackson" unmarshalTypeName="com.mycompany.fxtest.Prices"/>
        </dataFormats>
        <route id="getTick">
            <from id="_from1" uri="timer:tick?period=2000"/>
            <setHeader headerName="Authorization" id="authorization">
                <constant>Bearer b3b4271b3642d2f77e0e27e00a993dcf-ba79a03fa29040ebfd437036898a6862</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod" id="http-method">
                <constant>GET</constant>
            </setHeader>
            <to id="_to2" uri="https://api-fxpractice.oanda.com/v1/prices?instruments=USD_JPY"/>
            <to id="amq" uri="activemq:topic:FXDEMO"/>
            <log id="_log1" message="${body}"/>
            <to id="_to3" uri="https://api-fxpractice.oanda.com/v1/prices?instruments=USD_JPY"/>
            <unmarshal id="_unmarshal1" ref="myJson"/>
            <bean id="_bean1" method="createSessionContent(${body})" ref="beanCreator2"/>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <log id="_log2" message="The message from QUEUE ${body}"/>
            <setHeader headerName="CamelHttpMethod" id="_setHeader1">
                <constant>POST</constant>
            </setHeader>
            <setHeader headerName="CamelHttpPath" id="_setHeader2">
                <constant>/</constant>
            </setHeader>
            <to id="_to4" uri="cxfrs:bean:rsClient?exchangePattern=InOut"/>
            <convertBodyTo id="_convertBodyTo2" type="org.w3c.dom.Document"/>
            <choice id="_choice1">
                <when id="_when1">
                    <xpath>/org.kie.server.api.model.ServiceResponse/type = 'SUCCESS'</xpath>
                    <setBody id="_setBody1">
                        <xpath>/org.kie.server.api.model.ServiceResponse/result/text()</xpath>
                    </setBody>
                    <log id="_log3" message="${body}"/>
                    <convertBodyTo id="_convertBodyTo3" type="java.lang.String"/>
                </when>
                <otherwise id="_otherwise1">
                    <setBody id="_setBody2">
                        <constant>&lt;result&gt;Nothing matches&lt;/result&gt;</constant>
                    </setBody>
                </otherwise>
            </choice>
            <log id="_log4" message="The message from BRMS ${body}"/>
        </route>
    </camelContext>
</beans>
